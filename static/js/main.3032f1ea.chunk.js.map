{"version":3,"sources":["assets/Logo.png","Components/Navbar/NavHeader.tsx","Components/Home.tsx","Components/About.tsx","Components/Services.tsx","Components/Works.tsx","Components/Navbar/NavSidebar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useAnotherStyles","makeStyles","theme","createStyles","profile","height","width","fabContainer","display","alignItems","padding","NavHeader","classes","Fab","className","variant","Avatar","src","Logo","Typography","useStyles","root","spacing","Home","Paper","About","Services","Works","appBar","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","color","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","navIcon","navHeaderIcon","list","marginTop","listItem","marginBottom","listText","textDecoration","listIcon","divider","NavSidebar","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","noWrap","Drawer","paper","direction","List","ListItem","component","Link","to","ListItemIcon","ListItemText","primary","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3032f1ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.3e93f8d4.png\";","import React from \"react\";\r\n\r\nimport Logo from \"../../assets/Logo.png\";\r\n\r\nimport { Fab, Avatar, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useAnotherStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    profile: {\r\n      height: \"32px\",\r\n      width: \"32px\"\r\n    },\r\n    fabContainer: {\r\n      display: \"inline-flex\",\r\n      alignItems: \"center\",\r\n      padding: \"5px\"\r\n    }\r\n  })\r\n);\r\nconst NavHeader = () => {\r\n  const classes = useAnotherStyles();\r\n  return (\r\n    <Fab className=\"fabContainer\" variant=\"extended\">\r\n      <Avatar className={classes.profile} src={Logo} />\r\n      <Typography>Qwerty</Typography>\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","import React from \"react\";\r\n\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 2)\r\n    }\r\n  })\r\n);\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h1\">Home</Typography>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 2)\r\n    }\r\n  })\r\n);\r\nconst About = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h1\">About</Typography>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 2)\r\n    }\r\n  })\r\n);\r\nconst Services = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h1\">Services</Typography>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","import React from \"react\";\r\n\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: theme.spacing(3, 2)\r\n    }\r\n  })\r\n);\r\nconst Works = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h1\">Works</Typography>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Works;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme\r\n} from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\n\r\nimport NavHeader from \"../Navbar/NavHeader\";\r\nimport Home from \"../Home\";\r\nimport About from \"../About\";\r\nimport Services from \"../Services\";\r\nimport Works from \"../Works\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    appBar: {\r\n      backgroundColor: \"#333\",\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginRight: 15,\r\n      color: \"#fc0505\"\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\"\r\n    },\r\n    drawerOpen: {\r\n      color: \"#fff\",\r\n      backgroundColor: \"#333\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    drawerClose: {\r\n      backgroundColor: \"#333\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9) + 1\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3)\r\n    },\r\n    navIcon: {\r\n      marginLeft: 30\r\n    },\r\n    navHeaderIcon: {\r\n      color: \"#fc0505\"\r\n    },\r\n    list: {\r\n      marginTop: 20\r\n    },\r\n    listItem: {\r\n      marginBottom: 25\r\n    },\r\n    listText: {\r\n      color: \"#fff\",\r\n      textDecoration: \"none\",\r\n      alignItems: \"center\"\r\n    },\r\n    listIcon: {\r\n      color: \"#fc0505\"\r\n    },\r\n    divider: {\r\n      backgroundColor: \"#fc0505\"\r\n    }\r\n  })\r\n);\r\n\r\nconst NavSidebar = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            React Portfolio\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open\r\n          })\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <NavHeader />\r\n          <IconButton className={classes.navIcon} onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon className={classes.navHeaderIcon} />\r\n            ) : (\r\n              <ChevronLeftIcon className={classes.navHeaderIcon} />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <List className={classes.list}>\r\n          <ListItem className={classes.listItem} component={Link} to=\"/profile/\">\r\n            <ListItemIcon className={classes.listIcon}>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText className={classes.listText} primary=\"Home\" />\r\n          </ListItem>\r\n          <ListItem className={classes.listItem} component={Link} to=\"/profile/about\">\r\n            <ListItemIcon className={classes.listIcon}>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText className={classes.listText} primary=\"About Me\" />\r\n          </ListItem>\r\n          <ListItem className={classes.listItem} component={Link} to=\"/profile/works\">\r\n            <ListItemIcon className={classes.listIcon}>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText className={classes.listText} primary=\"Works\" />\r\n          </ListItem>\r\n          <ListItem\r\n            className={classes.listItem}\r\n            component={Link}\r\n            to=\"/profile/services\"\r\n          >\r\n            <ListItemIcon className={classes.listIcon}>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText className={classes.listText} primary=\"Services\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Switch>\r\n          <Route exact path=\"/profile/\" component={Home} />\r\n          <Route path=\"/profile/about\" component={About} />\r\n          <Route path=\"/profile/works\" component={Works} />\r\n          <Route path=\"/profile/services\" component={Services} />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavSidebar;\r\n{\r\n  /* <Link className={classes.link} to=\"/\">\r\n          <ListItemIcon className={classes.listIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>Home</ListItemText>\r\n        </Link>\r\n        <Link className={classes.link} to=\"/about\">\r\n          <ListItemIcon className={classes.listIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>About</ListItemText>\r\n        </Link>\r\n        <Link className={classes.link} to=\"/shop\">\r\n          <ListItemIcon className={classes.listIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>Shop</ListItemText>\r\n        </Link> */\r\n}\r\n{\r\n  /* <Link className={classes.link} to=\"/about\">\r\n          <ListItemIcon className={classes.listIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>About</ListItemText>\r\n        <Link className={classes.link} to=\"/shop\">\r\n          <ListItemIcon className={classes.listIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText>Shop</ListItemText>\r\n        </Link> */\r\n}\r\n// <AppBar position=\"static\">\r\n//   <Toolbar>\r\n//     <Typography variant=\"h6\">Hello</Typography>\r\n//     <Typography>\r\n//       <Link to=\"/\" className={classes.link}>\r\n//         <ListItemtext>Home</ListItemtext>\r\n//       </Link>\r\n//       <Link to=\"/about\" className={classes.link}>\r\n//         <ListItemtext>About</ListItemtext>\r\n//       </Link>\r\n//       <Link to=\"/shop\" className={classes.link}>\r\n//         <ListItemtext>Home</ListItemtext>\r\n//       </Link>\r\n//     </Typography>\r\n//   </Toolbar>\r\n{\r\n  /* <Link className={classes.link} to=\"/\">\r\n          <li>Home</li>\r\n        </Link>\r\n        <Link className={classes.link} to=\"/about\">\r\n          <li>About</li>\r\n        </Link>\r\n        <Link className={classes.link} to=\"/shop\">\r\n          <li>Shop</li>\r\n        </Link> */\r\n}\r\n","import React from \"react\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport NavSidebar from \"./Components/Navbar/NavSidebar\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavSidebar />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}